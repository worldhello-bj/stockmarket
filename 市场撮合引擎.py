# -*- coding: utf-8 -*-
"""
市场撮合引擎.py
职责：单一、纯粹地实现“价格由订单簿撮合产生”的核心逻辑。
对外暴露：
    1) 委托单类：委托单
    2) 撮合引擎类：市场撮合引擎
其余全部封装在内部，不依赖任何“股民”或“股票”细节。
"""

from collections import deque
import bisect

# ================= 委托单类 =================
class 委托单:
    """
    一张委托单（买或卖）。
    字段全部用中文，避免任何英文缩写。
    """
    __slots__ = ('交易者对象', '股票名称', '买卖方向', '委托价格', '委托数量', '序列号')
    _全局序列号 = 0

    def __init__(自身, 交易者对象, 股票名称, 买卖方向, 委托价格, 委托数量):
        # 委托单基本属性
        自身.交易者对象 = 交易者对象
        自身.股票名称  = 股票名称
        自身.买卖方向  = 买卖方向   # '买' 或 '卖'
        自身.委托价格  = 委托价格
        自身.委托数量  = 委托数量
        自身.序列号    = 委托单._全局序列号
        委托单._全局序列号 += 1

    def __lt__(自身, 另一个):
        """
        用于在列表里排序：
            买单：价高优先；卖单：价低优先；同价时早到优先。
        """
        if 自身.买卖方向 != 另一个.买卖方向:
            raise ValueError('不能比较不同买卖方向的委托单')
        if 自身.买卖方向 == '买':
            return (-自身.委托价格, 自身.序列号) < (-另一个.委托价格, 另一个.序列号)
        else:  # '卖'
            return (自身.委托价格, 自身.序列号) < (另一个.委托价格, 另一个.序列号)

    def __repr__(自身):
        return f"委托单({自身.买卖方向}, {自身.股票名称}, 价={自身.委托价格}, 量={自身.委托数量})"

# ================= 订单簿类 =================
class 订单簿:
    """
    针对单只股票的完整订单簿。
    内部维护：
        买单队列：价格从高到低
        卖单队列：价格从低到高
    """
    def __init__(自身, 股票名称):
        自身.股票名称 = 股票名称
        自身.买单队列 = []   # 列表 + bisect 实现堆
        自身.卖单队列 = []

    def 加入委托单(自身, 委托单对象):
        # 按买卖方向插入队列，自动排序
        if 委托单对象.买卖方向 == '买':
            bisect.insort(自身.买单队列, 委托单对象)
        else:
            bisect.insort(自身.卖单队列, 委托单对象)

    def 撤销委托单(自身, 委托单对象):
        # 从队列中移除委托单
        if 委托单对象.买卖方向 == '买':
            自身.买单队列.remove(委托单对象)
        else:
            自身.卖单队列.remove(委托单对象)

    def 最高买价委托(自身):
        # 返回买单队列中最高买价的委托单
        return 自身.买单队列[0] if 自身.买单队列 else None

    def 最低卖价委托(自身):
        # 返回卖单队列中最低卖价的委托单
        return 自身.卖单队列[0] if 自身.卖单队列 else None

# ================= 市场撮合引擎类 =================
class 市场撮合引擎:
    """
    中央撮合引擎：管理所有股票的订单簿，并完成成交撮合。
    """
    def __init__(自身):
        自身.全部订单簿 = {}          # {股票名称: 订单簿}
        自身.最近成交列表 = deque(maxlen=10000)  # 记录最新成交，便于查询最新价

    # ---------- 对外公开方法 ----------
    def 提交委托单(自身, 委托单对象):
        """
        把一张委托单送进对应股票的订单簿，并立即开始撮合。
        """
        订单簿对象 = 自身.全部订单簿.setdefault(委托单对象.股票名称,
                                           订单簿(委托单对象.股票名称))
        订单簿对象.加入委托单(委托单对象)
        自身._撮合循环(订单簿对象)

    def 最新成交价(自身, 股票名称):
        """
        返回该股票最近一次成交价；若无成交返回 None。
        """
        for 成交记录 in reversed(自身.最近成交列表):
            if 成交记录['股票名称'] == 股票名称:
                return 成交记录['成交价格']
        return None

    # ---------- 内部撮合循环 ----------
    def _撮合循环(自身, 订单簿对象):
        while True:
            最高买 = 订单簿对象.最高买价委托()
            最低卖 = 订单簿对象.最低卖价委托()
            # 没有买单或卖单，或买价低于卖价则无法成交
            if 最高买 is None or 最低卖 is None or 最高买.委托价格 < 最低卖.委托价格:
                break
            # 计算可成交数量和价格
            成交数量 = min(最高买.委托数量, 最低卖.委托数量)
            成交价格 = round((最高买.委托价格 + 最低卖.委托价格) / 2, 2)  # 保留两位小数
            资金总额 = 成交数量 * 成交价格
            # 买方现金不足则只成交可买数量
            if 最高买.交易者对象.现金余额 < 资金总额:
                可买数量 = int(最高买.交易者对象.现金余额 // 成交价格)
                if 可买数量 == 0:
                    break
                成交数量 = min(可买数量, 成交数量)
                资金总额 = 成交数量 * 成交价格
            # 卖方持仓不足则只成交可卖数量
            if 最低卖.交易者对象.持仓数量表.get(最低卖.股票名称, 0) < 成交数量:
                可卖数量 = 最低卖.交易者对象.持仓数量表.get(最低卖.股票名称, 0)
                if 可卖数量 == 0:
                    break
                成交数量 = min(可卖数量, 成交数量)
                资金总额 = 成交数量 * 成交价格
            # 记录成交
            自身.最近成交列表.append({
                '时间戳': len(自身.最近成交列表),
                '股票名称': 订单簿对象.股票名称,
                '成交价格': 成交价格,
                '成交数量': 成交数量
            })
            # 资金与股票过户
            自身._资产过户(最高买, 最低卖, 成交数量, 成交价格)
            # 更新委托单剩余数量或移除
            最高买.委托数量 -= 成交数量
            最低卖.委托数量 -= 成交数量
            if 最高买.委托数量 == 0:
                订单簿对象.撤销委托单(最高买)
            if 最低卖.委托数量 == 0:
                订单簿对象.撤销委托单(最低卖)

    def _资产过户(自身, 买方委托单, 卖方委托单, 成交数量, 成交价格):
        # 完成资金和股票的转移
        买方 = 买方委托单.交易者对象
        卖方 = 卖方委托单.交易者对象
        股票名称 = 买方委托单.股票名称
        资金总额 = 成交数量 * 成交价格

        # 买方：扣钱 + 得股票
        买方.现金余额 -= 资金总额
        买方.持仓数量表[股票名称] = 买方.持仓数量表.get(股票名称, 0) + 成交数量

        # 卖方：扣股票 + 得钱
        卖方.持仓数量表[股票名称] -= 成交数量
        卖方.现金余额 += 资金总额
        if 卖方.持仓数量表[股票名称] == 0:
            del 卖方.持仓数量表[股票名称]



