# -*- coding: utf-8 -*-
"""
股民.py
定义多种策略股民：
1. 趋势型股民：价格上涨时卖出，价格下跌时买入。
2. 逆势型股民：价格上涨时买入，价格下跌时卖出。
3. 随机型股民：随机买卖。
"""
import random
from 市场撮合引擎 import 委托单

class 基础股民:
    def __init__(自身, 姓名, 现金余额, 大盘信心):
        自身.姓名 = 姓名
        自身.现金余额 = 现金余额
        自身.大盘信心 = 大盘信心
        自身.个股信心表 = {}
        自身.持仓数量表 = {}
        自身.买卖尝试表 = {}

    def _综合信心(自身, 股票名称):
        大盘权重 = 0.2
        个股权重 = 0.8
        个股信心 = 自身.个股信心表.get(股票名称, 50)
        return 自身.大盘信心 * 大盘权重 + 个股信心 * 个股权重

class 趋势型股民(基础股民):
    """
    价格上涨时卖出，价格下跌时买入。
    """
    def 生成委托单(自身, 股票名称, 当前价格字典, 引擎):
        最新价 = 引擎.最新成交价(股票名称) or 当前价格字典[股票名称]
        历史价 = 当前价格字典[股票名称]
        持仓数量 = 自身.持仓数量表.get(股票名称, 0)
        尝试次数 = 自身.买卖尝试表.get(股票名称, 0)
        # 价格上涨卖出
        if 最新价 > 历史价 and 持仓数量 > 0:
            委托价格 = round(最新价, 2)
            委托数量 = max(1, 持仓数量 // 2)
            if 委托数量 > 持仓数量:
                委托数量 = 持仓数量
            自身.买卖尝试表[股票名称] = 0
            return 委托单(自身, 股票名称, '卖', 委托价格, 委托数量)
        # 价格下跌买入
        elif 最新价 < 历史价:
            委托价格 = round(最新价, 2)
            委托数量 = max(1, int(自身.现金余额 // 委托价格 // 10))
            if 委托数量 * 委托价格 > 自身.现金余额 or 委托数量 == 0:
                自身.买卖尝试表[股票名称] = 尝试次数 + 1
                return None
            自身.买卖尝试表[股票名称] = 0
            return 委托单(自身, 股票名称, '买', 委托价格, 委托数量)
        return None

class 逆势型股民(基础股民):
    """
    价格上涨时买入，价格下跌时卖出。
    """
    def 生成委托单(自身, 股票名称, 当前价格字典, 引擎):
        最新价 = 引擎.最新成交价(股票名称) or 当前价格字典[股票名称]
        历史价 = 当前价格字典[股票名称]
        持仓数量 = 自身.持仓数量表.get(股票名称, 0)
        尝试次数 = 自身.买卖尝试表.get(股票名称, 0)
        # 价格上涨买入
        if 最新价 > 历史价:
            委托价格 = round(最新价, 2)
            委托数量 = max(1, int(自身.现金余额 // 委托价格 // 10))
            if 委托数量 * 委托价格 > 自身.现金余额 or 委托数量 == 0:
                自身.买卖尝试表[股票名称] = 尝试次数 + 1
                return None
            自身.买卖尝试表[股票名称] = 0
            return 委托单(自身, 股票名称, '买', 委托价格, 委托数量)
        # 价格下跌卖出
        elif 最新价 < 历史价 and 持仓数量 > 0:
            委托价格 = round(最新价, 2)
            委托数量 = max(1, 持仓数量 // 2)
            if 委托数量 > 持仓数量:
                委托数量 = 持仓数量
            自身.买卖尝试表[股票名称] = 0
            return 委托单(自身, 股票名称, '卖', 委托价格, 委托数量)
        return None

class 随机型股民(基础股民):
    """
    随机买卖。
    """
    def 生成委托单(自身, 股票名称, 当前价格字典, 引擎):
        最新价 = 引擎.最新成交价(股票名称) or 当前价格字典[股票名称]
        持仓数量 = 自身.持仓数量表.get(股票名称, 0)
        尝试次数 = 自身.买卖尝试表.get(股票名称, 0)
        if random.random() < 0.5:
            # 买入
            委托价格 = round(最新价, 2)
            委托数量 = max(1, int(自身.现金余额 // 委托价格 // 10))
            if 委托数量 * 委托价格 > 自身.现金余额 or 委托数量 == 0:
                自身.买卖尝试表[股票名称] = 尝试次数 + 1
                return None
            自身.买卖尝试表[股票名称] = 0
            return 委托单(自身, 股票名称, '买', 委托价格, 委托数量)
        else:
            # 卖出
            if 持仓数量 > 0:
                委托价格 = round(最新价, 2)
                委托数量 = max(1, 持仓数量 // 2)
                if 委托数量 > 持仓数量:
                    委托数量 = 持仓数量
                自身.买卖尝试表[股票名称] = 0
                return 委托单(自身, 股票名称, '卖', 委托价格, 委托数量)
        return None
